// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: spacex/api/device/dish.proto

package device

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DishState int32

const (
	DishState_UNKNOWN   DishState = 0
	DishState_CONNECTED DishState = 1
	DishState_SEARCHING DishState = 2
	DishState_BOOTING   DishState = 3
)

// Enum value maps for DishState.
var (
	DishState_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONNECTED",
		2: "SEARCHING",
		3: "BOOTING",
	}
	DishState_value = map[string]int32{
		"UNKNOWN":   0,
		"CONNECTED": 1,
		"SEARCHING": 2,
		"BOOTING":   3,
	}
)

func (x DishState) Enum() *DishState {
	p := new(DishState)
	*p = x
	return p
}

func (x DishState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DishState) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_dish_proto_enumTypes[0].Descriptor()
}

func (DishState) Type() protoreflect.EnumType {
	return &file_spacex_api_device_dish_proto_enumTypes[0]
}

func (x DishState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DishState.Descriptor instead.
func (DishState) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{0}
}

type DishOutage_Cause int32

const (
	DishOutage_UNKNOWN          DishOutage_Cause = 0
	DishOutage_BOOTING          DishOutage_Cause = 1
	DishOutage_STOWED           DishOutage_Cause = 2
	DishOutage_THERMAL_SHUTDOWN DishOutage_Cause = 3
	DishOutage_NO_SCHEDULE      DishOutage_Cause = 4
	DishOutage_NO_SATS          DishOutage_Cause = 5
	DishOutage_OBSTRUCTED       DishOutage_Cause = 6
	DishOutage_NO_DOWNLINK      DishOutage_Cause = 7
	DishOutage_NO_PINGS         DishOutage_Cause = 8
)

// Enum value maps for DishOutage_Cause.
var (
	DishOutage_Cause_name = map[int32]string{
		0: "UNKNOWN",
		1: "BOOTING",
		2: "STOWED",
		3: "THERMAL_SHUTDOWN",
		4: "NO_SCHEDULE",
		5: "NO_SATS",
		6: "OBSTRUCTED",
		7: "NO_DOWNLINK",
		8: "NO_PINGS",
	}
	DishOutage_Cause_value = map[string]int32{
		"UNKNOWN":          0,
		"BOOTING":          1,
		"STOWED":           2,
		"THERMAL_SHUTDOWN": 3,
		"NO_SCHEDULE":      4,
		"NO_SATS":          5,
		"OBSTRUCTED":       6,
		"NO_DOWNLINK":      7,
		"NO_PINGS":         8,
	}
)

func (x DishOutage_Cause) Enum() *DishOutage_Cause {
	p := new(DishOutage_Cause)
	*p = x
	return p
}

func (x DishOutage_Cause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DishOutage_Cause) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_dish_proto_enumTypes[1].Descriptor()
}

func (DishOutage_Cause) Type() protoreflect.EnumType {
	return &file_spacex_api_device_dish_proto_enumTypes[1]
}

func (x DishOutage_Cause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DishOutage_Cause.Descriptor instead.
func (DishOutage_Cause) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{4, 0}
}

type SetTestModeRequest_RfMode int32

const (
	SetTestModeRequest_RX     SetTestModeRequest_RfMode = 0
	SetTestModeRequest_IDLE   SetTestModeRequest_RfMode = 1
	SetTestModeRequest_TX     SetTestModeRequest_RfMode = 2
	SetTestModeRequest_CAL    SetTestModeRequest_RfMode = 3
	SetTestModeRequest_USER   SetTestModeRequest_RfMode = 4
	SetTestModeRequest_NORMAL SetTestModeRequest_RfMode = 420
)

// Enum value maps for SetTestModeRequest_RfMode.
var (
	SetTestModeRequest_RfMode_name = map[int32]string{
		0:   "RX",
		1:   "IDLE",
		2:   "TX",
		3:   "CAL",
		4:   "USER",
		420: "NORMAL",
	}
	SetTestModeRequest_RfMode_value = map[string]int32{
		"RX":     0,
		"IDLE":   1,
		"TX":     2,
		"CAL":    3,
		"USER":   4,
		"NORMAL": 420,
	}
)

func (x SetTestModeRequest_RfMode) Enum() *SetTestModeRequest_RfMode {
	p := new(SetTestModeRequest_RfMode)
	*p = x
	return p
}

func (x SetTestModeRequest_RfMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetTestModeRequest_RfMode) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_dish_proto_enumTypes[2].Descriptor()
}

func (SetTestModeRequest_RfMode) Type() protoreflect.EnumType {
	return &file_spacex_api_device_dish_proto_enumTypes[2]
}

func (x SetTestModeRequest_RfMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetTestModeRequest_RfMode.Descriptor instead.
func (SetTestModeRequest_RfMode) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{17, 0}
}

type DishStowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unstow bool `protobuf:"varint,1,opt,name=unstow,proto3" json:"unstow,omitempty"`
}

func (x *DishStowRequest) Reset() {
	*x = DishStowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishStowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishStowRequest) ProtoMessage() {}

func (x *DishStowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishStowRequest.ProtoReflect.Descriptor instead.
func (*DishStowRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{0}
}

func (x *DishStowRequest) GetUnstow() bool {
	if x != nil {
		return x.Unstow
	}
	return false
}

type DishStowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DishStowResponse) Reset() {
	*x = DishStowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishStowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishStowResponse) ProtoMessage() {}

func (x *DishStowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishStowResponse.ProtoReflect.Descriptor instead.
func (*DishStowResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{1}
}

type DishGetContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DishGetContextRequest) Reset() {
	*x = DishGetContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetContextRequest) ProtoMessage() {}

func (x *DishGetContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetContextRequest.ProtoReflect.Descriptor instead.
func (*DishGetContextRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{2}
}

type DishGetContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo                 *DeviceInfo  `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	DeviceState                *DeviceState `protobuf:"bytes,7,opt,name=device_state,json=deviceState,proto3" json:"device_state,omitempty"`
	ObstructionFraction        float32      `protobuf:"fixed32,2,opt,name=obstruction_fraction,json=obstructionFraction,proto3" json:"obstruction_fraction,omitempty"`
	ObstructionValidS          float32      `protobuf:"fixed32,3,opt,name=obstruction_valid_s,json=obstructionValidS,proto3" json:"obstruction_valid_s,omitempty"`
	ObstructionCurrent         bool         `protobuf:"varint,12,opt,name=obstruction_current,json=obstructionCurrent,proto3" json:"obstruction_current,omitempty"`
	CellId                     uint32       `protobuf:"varint,4,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	PopRackId                  uint32       `protobuf:"varint,5,opt,name=pop_rack_id,json=popRackId,proto3" json:"pop_rack_id,omitempty"`
	InitialSatelliteId         uint32       `protobuf:"varint,8,opt,name=initial_satellite_id,json=initialSatelliteId,proto3" json:"initial_satellite_id,omitempty"`
	InitialGatewayId           uint32       `protobuf:"varint,9,opt,name=initial_gateway_id,json=initialGatewayId,proto3" json:"initial_gateway_id,omitempty"`
	OnBackupBeam               bool         `protobuf:"varint,10,opt,name=on_backup_beam,json=onBackupBeam,proto3" json:"on_backup_beam,omitempty"`
	SecondsToSlotEnd           float32      `protobuf:"fixed32,6,opt,name=seconds_to_slot_end,json=secondsToSlotEnd,proto3" json:"seconds_to_slot_end,omitempty"`
	DebugTelemetryEnabled      bool         `protobuf:"varint,11,opt,name=debug_telemetry_enabled,json=debugTelemetryEnabled,proto3" json:"debug_telemetry_enabled,omitempty"`
	PopPingDropRate_15SMean    float32      `protobuf:"fixed32,13,opt,name=pop_ping_drop_rate_15s_mean,json=popPingDropRate15sMean,proto3" json:"pop_ping_drop_rate_15s_mean,omitempty"`
	PopPingLatencyMs_15SMean   float32      `protobuf:"fixed32,14,opt,name=pop_ping_latency_ms_15s_mean,json=popPingLatencyMs15sMean,proto3" json:"pop_ping_latency_ms_15s_mean,omitempty"`
	SecondsSinceLast_1SOutage  float32      `protobuf:"fixed32,15,opt,name=seconds_since_last_1s_outage,json=secondsSinceLast1sOutage,proto3" json:"seconds_since_last_1s_outage,omitempty"`
	SecondsSinceLast_2SOutage  float32      `protobuf:"fixed32,16,opt,name=seconds_since_last_2s_outage,json=secondsSinceLast2sOutage,proto3" json:"seconds_since_last_2s_outage,omitempty"`
	SecondsSinceLast_5SOutage  float32      `protobuf:"fixed32,17,opt,name=seconds_since_last_5s_outage,json=secondsSinceLast5sOutage,proto3" json:"seconds_since_last_5s_outage,omitempty"`
	SecondsSinceLast_15SOutage float32      `protobuf:"fixed32,18,opt,name=seconds_since_last_15s_outage,json=secondsSinceLast15sOutage,proto3" json:"seconds_since_last_15s_outage,omitempty"`
	SecondsSinceLast_60SOutage float32      `protobuf:"fixed32,19,opt,name=seconds_since_last_60s_outage,json=secondsSinceLast60sOutage,proto3" json:"seconds_since_last_60s_outage,omitempty"`
}

func (x *DishGetContextResponse) Reset() {
	*x = DishGetContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetContextResponse) ProtoMessage() {}

func (x *DishGetContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetContextResponse.ProtoReflect.Descriptor instead.
func (*DishGetContextResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{3}
}

func (x *DishGetContextResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *DishGetContextResponse) GetDeviceState() *DeviceState {
	if x != nil {
		return x.DeviceState
	}
	return nil
}

func (x *DishGetContextResponse) GetObstructionFraction() float32 {
	if x != nil {
		return x.ObstructionFraction
	}
	return 0
}

func (x *DishGetContextResponse) GetObstructionValidS() float32 {
	if x != nil {
		return x.ObstructionValidS
	}
	return 0
}

func (x *DishGetContextResponse) GetObstructionCurrent() bool {
	if x != nil {
		return x.ObstructionCurrent
	}
	return false
}

func (x *DishGetContextResponse) GetCellId() uint32 {
	if x != nil {
		return x.CellId
	}
	return 0
}

func (x *DishGetContextResponse) GetPopRackId() uint32 {
	if x != nil {
		return x.PopRackId
	}
	return 0
}

func (x *DishGetContextResponse) GetInitialSatelliteId() uint32 {
	if x != nil {
		return x.InitialSatelliteId
	}
	return 0
}

func (x *DishGetContextResponse) GetInitialGatewayId() uint32 {
	if x != nil {
		return x.InitialGatewayId
	}
	return 0
}

func (x *DishGetContextResponse) GetOnBackupBeam() bool {
	if x != nil {
		return x.OnBackupBeam
	}
	return false
}

func (x *DishGetContextResponse) GetSecondsToSlotEnd() float32 {
	if x != nil {
		return x.SecondsToSlotEnd
	}
	return 0
}

func (x *DishGetContextResponse) GetDebugTelemetryEnabled() bool {
	if x != nil {
		return x.DebugTelemetryEnabled
	}
	return false
}

func (x *DishGetContextResponse) GetPopPingDropRate_15SMean() float32 {
	if x != nil {
		return x.PopPingDropRate_15SMean
	}
	return 0
}

func (x *DishGetContextResponse) GetPopPingLatencyMs_15SMean() float32 {
	if x != nil {
		return x.PopPingLatencyMs_15SMean
	}
	return 0
}

func (x *DishGetContextResponse) GetSecondsSinceLast_1SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_1SOutage
	}
	return 0
}

func (x *DishGetContextResponse) GetSecondsSinceLast_2SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_2SOutage
	}
	return 0
}

func (x *DishGetContextResponse) GetSecondsSinceLast_5SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_5SOutage
	}
	return 0
}

func (x *DishGetContextResponse) GetSecondsSinceLast_15SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_15SOutage
	}
	return 0
}

func (x *DishGetContextResponse) GetSecondsSinceLast_60SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_60SOutage
	}
	return 0
}

type DishOutage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cause            DishOutage_Cause `protobuf:"varint,1,opt,name=cause,proto3,enum=SpaceX.API.Device.DishOutage_Cause" json:"cause,omitempty"`
	StartTimestampNs int64            `protobuf:"varint,2,opt,name=start_timestamp_ns,json=startTimestampNs,proto3" json:"start_timestamp_ns,omitempty"`
	DurationNs       uint64           `protobuf:"varint,3,opt,name=duration_ns,json=durationNs,proto3" json:"duration_ns,omitempty"`
	DidSwitch        bool             `protobuf:"varint,4,opt,name=did_switch,json=didSwitch,proto3" json:"did_switch,omitempty"`
}

func (x *DishOutage) Reset() {
	*x = DishOutage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishOutage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishOutage) ProtoMessage() {}

func (x *DishOutage) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishOutage.ProtoReflect.Descriptor instead.
func (*DishOutage) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{4}
}

func (x *DishOutage) GetCause() DishOutage_Cause {
	if x != nil {
		return x.Cause
	}
	return DishOutage_UNKNOWN
}

func (x *DishOutage) GetStartTimestampNs() int64 {
	if x != nil {
		return x.StartTimestampNs
	}
	return 0
}

func (x *DishOutage) GetDurationNs() uint64 {
	if x != nil {
		return x.DurationNs
	}
	return 0
}

func (x *DishOutage) GetDidSwitch() bool {
	if x != nil {
		return x.DidSwitch
	}
	return false
}

type DishGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current               uint64        `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PopPingDropRate       []float32     `protobuf:"fixed32,1001,rep,packed,name=pop_ping_drop_rate,json=popPingDropRate,proto3" json:"pop_ping_drop_rate,omitempty"`
	PopPingLatencyMs      []float32     `protobuf:"fixed32,1002,rep,packed,name=pop_ping_latency_ms,json=popPingLatencyMs,proto3" json:"pop_ping_latency_ms,omitempty"`
	DownlinkThroughputBps []float32     `protobuf:"fixed32,1003,rep,packed,name=downlink_throughput_bps,json=downlinkThroughputBps,proto3" json:"downlink_throughput_bps,omitempty"`
	UplinkThroughputBps   []float32     `protobuf:"fixed32,1004,rep,packed,name=uplink_throughput_bps,json=uplinkThroughputBps,proto3" json:"uplink_throughput_bps,omitempty"`
	Outages               []*DishOutage `protobuf:"bytes,1009,rep,name=outages,proto3" json:"outages,omitempty"`
}

func (x *DishGetHistoryResponse) Reset() {
	*x = DishGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetHistoryResponse) ProtoMessage() {}

func (x *DishGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*DishGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{5}
}

func (x *DishGetHistoryResponse) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *DishGetHistoryResponse) GetPopPingDropRate() []float32 {
	if x != nil {
		return x.PopPingDropRate
	}
	return nil
}

func (x *DishGetHistoryResponse) GetPopPingLatencyMs() []float32 {
	if x != nil {
		return x.PopPingLatencyMs
	}
	return nil
}

func (x *DishGetHistoryResponse) GetDownlinkThroughputBps() []float32 {
	if x != nil {
		return x.DownlinkThroughputBps
	}
	return nil
}

func (x *DishGetHistoryResponse) GetUplinkThroughputBps() []float32 {
	if x != nil {
		return x.UplinkThroughputBps
	}
	return nil
}

func (x *DishGetHistoryResponse) GetOutages() []*DishOutage {
	if x != nil {
		return x.Outages
	}
	return nil
}

type DishGetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo                 *DeviceInfo           `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	DeviceState                *DeviceState          `protobuf:"bytes,2,opt,name=device_state,json=deviceState,proto3" json:"device_state,omitempty"`
	Alerts                     *DishAlerts           `protobuf:"bytes,1005,opt,name=alerts,proto3" json:"alerts,omitempty"`
	Outage                     *DishOutage           `protobuf:"bytes,1014,opt,name=outage,proto3" json:"outage,omitempty"`
	GpsStats                   *DishGpsStats         `protobuf:"bytes,1015,opt,name=gps_stats,json=gpsStats,proto3" json:"gps_stats,omitempty"`
	SecondsToFirstNonemptySlot float32               `protobuf:"fixed32,1002,opt,name=seconds_to_first_nonempty_slot,json=secondsToFirstNonemptySlot,proto3" json:"seconds_to_first_nonempty_slot,omitempty"`
	PopPingDropRate            float32               `protobuf:"fixed32,1003,opt,name=pop_ping_drop_rate,json=popPingDropRate,proto3" json:"pop_ping_drop_rate,omitempty"`
	DownlinkThroughputBps      float32               `protobuf:"fixed32,1007,opt,name=downlink_throughput_bps,json=downlinkThroughputBps,proto3" json:"downlink_throughput_bps,omitempty"`
	UplinkThroughputBps        float32               `protobuf:"fixed32,1008,opt,name=uplink_throughput_bps,json=uplinkThroughputBps,proto3" json:"uplink_throughput_bps,omitempty"`
	PopPingLatencyMs           float32               `protobuf:"fixed32,1009,opt,name=pop_ping_latency_ms,json=popPingLatencyMs,proto3" json:"pop_ping_latency_ms,omitempty"`
	ObstructionStats           *DishObstructionStats `protobuf:"bytes,1004,opt,name=obstruction_stats,json=obstructionStats,proto3" json:"obstruction_stats,omitempty"`
	StowRequested              bool                  `protobuf:"varint,1010,opt,name=stow_requested,json=stowRequested,proto3" json:"stow_requested,omitempty"`
	BoresightAzimuthDeg        float32               `protobuf:"fixed32,1011,opt,name=boresight_azimuth_deg,json=boresightAzimuthDeg,proto3" json:"boresight_azimuth_deg,omitempty"`
	BoresightElevationDeg      float32               `protobuf:"fixed32,1012,opt,name=boresight_elevation_deg,json=boresightElevationDeg,proto3" json:"boresight_elevation_deg,omitempty"`
	EthSpeedMbps               int32                 `protobuf:"varint,1016,opt,name=eth_speed_mbps,json=ethSpeedMbps,proto3" json:"eth_speed_mbps,omitempty"`
}

func (x *DishGetStatusResponse) Reset() {
	*x = DishGetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetStatusResponse) ProtoMessage() {}

func (x *DishGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetStatusResponse.ProtoReflect.Descriptor instead.
func (*DishGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{6}
}

func (x *DishGetStatusResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *DishGetStatusResponse) GetDeviceState() *DeviceState {
	if x != nil {
		return x.DeviceState
	}
	return nil
}

func (x *DishGetStatusResponse) GetAlerts() *DishAlerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *DishGetStatusResponse) GetOutage() *DishOutage {
	if x != nil {
		return x.Outage
	}
	return nil
}

func (x *DishGetStatusResponse) GetGpsStats() *DishGpsStats {
	if x != nil {
		return x.GpsStats
	}
	return nil
}

func (x *DishGetStatusResponse) GetSecondsToFirstNonemptySlot() float32 {
	if x != nil {
		return x.SecondsToFirstNonemptySlot
	}
	return 0
}

func (x *DishGetStatusResponse) GetPopPingDropRate() float32 {
	if x != nil {
		return x.PopPingDropRate
	}
	return 0
}

func (x *DishGetStatusResponse) GetDownlinkThroughputBps() float32 {
	if x != nil {
		return x.DownlinkThroughputBps
	}
	return 0
}

func (x *DishGetStatusResponse) GetUplinkThroughputBps() float32 {
	if x != nil {
		return x.UplinkThroughputBps
	}
	return 0
}

func (x *DishGetStatusResponse) GetPopPingLatencyMs() float32 {
	if x != nil {
		return x.PopPingLatencyMs
	}
	return 0
}

func (x *DishGetStatusResponse) GetObstructionStats() *DishObstructionStats {
	if x != nil {
		return x.ObstructionStats
	}
	return nil
}

func (x *DishGetStatusResponse) GetStowRequested() bool {
	if x != nil {
		return x.StowRequested
	}
	return false
}

func (x *DishGetStatusResponse) GetBoresightAzimuthDeg() float32 {
	if x != nil {
		return x.BoresightAzimuthDeg
	}
	return 0
}

func (x *DishGetStatusResponse) GetBoresightElevationDeg() float32 {
	if x != nil {
		return x.BoresightElevationDeg
	}
	return 0
}

func (x *DishGetStatusResponse) GetEthSpeedMbps() int32 {
	if x != nil {
		return x.EthSpeedMbps
	}
	return 0
}

type DishGetObstructionMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DishGetObstructionMapRequest) Reset() {
	*x = DishGetObstructionMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetObstructionMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetObstructionMapRequest) ProtoMessage() {}

func (x *DishGetObstructionMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetObstructionMapRequest.ProtoReflect.Descriptor instead.
func (*DishGetObstructionMapRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{7}
}

type DishGetObstructionMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumRows uint32    `protobuf:"varint,1,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	NumCols uint32    `protobuf:"varint,2,opt,name=num_cols,json=numCols,proto3" json:"num_cols,omitempty"`
	Snr     []float32 `protobuf:"fixed32,3,rep,packed,name=snr,proto3" json:"snr,omitempty"`
}

func (x *DishGetObstructionMapResponse) Reset() {
	*x = DishGetObstructionMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetObstructionMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetObstructionMapResponse) ProtoMessage() {}

func (x *DishGetObstructionMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetObstructionMapResponse.ProtoReflect.Descriptor instead.
func (*DishGetObstructionMapResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{8}
}

func (x *DishGetObstructionMapResponse) GetNumRows() uint32 {
	if x != nil {
		return x.NumRows
	}
	return 0
}

func (x *DishGetObstructionMapResponse) GetNumCols() uint32 {
	if x != nil {
		return x.NumCols
	}
	return 0
}

func (x *DishGetObstructionMapResponse) GetSnr() []float32 {
	if x != nil {
		return x.Snr
	}
	return nil
}

type DishAlerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MotorsStuck         bool `protobuf:"varint,1,opt,name=motors_stuck,json=motorsStuck,proto3" json:"motors_stuck,omitempty"`
	ThermalThrottle     bool `protobuf:"varint,3,opt,name=thermal_throttle,json=thermalThrottle,proto3" json:"thermal_throttle,omitempty"`
	ThermalShutdown     bool `protobuf:"varint,2,opt,name=thermal_shutdown,json=thermalShutdown,proto3" json:"thermal_shutdown,omitempty"`
	MastNotNearVertical bool `protobuf:"varint,5,opt,name=mast_not_near_vertical,json=mastNotNearVertical,proto3" json:"mast_not_near_vertical,omitempty"`
	UnexpectedLocation  bool `protobuf:"varint,4,opt,name=unexpected_location,json=unexpectedLocation,proto3" json:"unexpected_location,omitempty"`
	SlowEthernetSpeeds  bool `protobuf:"varint,6,opt,name=slow_ethernet_speeds,json=slowEthernetSpeeds,proto3" json:"slow_ethernet_speeds,omitempty"`
	Roaming             bool `protobuf:"varint,7,opt,name=roaming,proto3" json:"roaming,omitempty"`
}

func (x *DishAlerts) Reset() {
	*x = DishAlerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishAlerts) ProtoMessage() {}

func (x *DishAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishAlerts.ProtoReflect.Descriptor instead.
func (*DishAlerts) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{9}
}

func (x *DishAlerts) GetMotorsStuck() bool {
	if x != nil {
		return x.MotorsStuck
	}
	return false
}

func (x *DishAlerts) GetThermalThrottle() bool {
	if x != nil {
		return x.ThermalThrottle
	}
	return false
}

func (x *DishAlerts) GetThermalShutdown() bool {
	if x != nil {
		return x.ThermalShutdown
	}
	return false
}

func (x *DishAlerts) GetMastNotNearVertical() bool {
	if x != nil {
		return x.MastNotNearVertical
	}
	return false
}

func (x *DishAlerts) GetUnexpectedLocation() bool {
	if x != nil {
		return x.UnexpectedLocation
	}
	return false
}

func (x *DishAlerts) GetSlowEthernetSpeeds() bool {
	if x != nil {
		return x.SlowEthernetSpeeds
	}
	return false
}

func (x *DishAlerts) GetRoaming() bool {
	if x != nil {
		return x.Roaming
	}
	return false
}

type DishGpsStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpsValid bool   `protobuf:"varint,1,opt,name=gps_valid,json=gpsValid,proto3" json:"gps_valid,omitempty"`
	GpsSats  uint32 `protobuf:"varint,2,opt,name=gps_sats,json=gpsSats,proto3" json:"gps_sats,omitempty"`
}

func (x *DishGpsStats) Reset() {
	*x = DishGpsStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGpsStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGpsStats) ProtoMessage() {}

func (x *DishGpsStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGpsStats.ProtoReflect.Descriptor instead.
func (*DishGpsStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{10}
}

func (x *DishGpsStats) GetGpsValid() bool {
	if x != nil {
		return x.GpsValid
	}
	return false
}

func (x *DishGpsStats) GetGpsSats() uint32 {
	if x != nil {
		return x.GpsSats
	}
	return 0
}

type DishObstructionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentlyObstructed              bool      `protobuf:"varint,5,opt,name=currently_obstructed,json=currentlyObstructed,proto3" json:"currently_obstructed,omitempty"`
	FractionObstructed               float32   `protobuf:"fixed32,1,opt,name=fraction_obstructed,json=fractionObstructed,proto3" json:"fraction_obstructed,omitempty"`
	ValidS                           float32   `protobuf:"fixed32,4,opt,name=valid_s,json=validS,proto3" json:"valid_s,omitempty"`
	WedgeFractionObstructed          []float32 `protobuf:"fixed32,2,rep,packed,name=wedge_fraction_obstructed,json=wedgeFractionObstructed,proto3" json:"wedge_fraction_obstructed,omitempty"`
	WedgeAbsFractionObstructed       []float32 `protobuf:"fixed32,3,rep,packed,name=wedge_abs_fraction_obstructed,json=wedgeAbsFractionObstructed,proto3" json:"wedge_abs_fraction_obstructed,omitempty"`
	AvgProlongedObstructionDurationS float32   `protobuf:"fixed32,6,opt,name=avg_prolonged_obstruction_duration_s,json=avgProlongedObstructionDurationS,proto3" json:"avg_prolonged_obstruction_duration_s,omitempty"`
	AvgProlongedObstructionIntervalS float32   `protobuf:"fixed32,7,opt,name=avg_prolonged_obstruction_interval_s,json=avgProlongedObstructionIntervalS,proto3" json:"avg_prolonged_obstruction_interval_s,omitempty"`
	AvgProlongedObstructionValid     bool      `protobuf:"varint,8,opt,name=avg_prolonged_obstruction_valid,json=avgProlongedObstructionValid,proto3" json:"avg_prolonged_obstruction_valid,omitempty"`
}

func (x *DishObstructionStats) Reset() {
	*x = DishObstructionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishObstructionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishObstructionStats) ProtoMessage() {}

func (x *DishObstructionStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishObstructionStats.ProtoReflect.Descriptor instead.
func (*DishObstructionStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{11}
}

func (x *DishObstructionStats) GetCurrentlyObstructed() bool {
	if x != nil {
		return x.CurrentlyObstructed
	}
	return false
}

func (x *DishObstructionStats) GetFractionObstructed() float32 {
	if x != nil {
		return x.FractionObstructed
	}
	return 0
}

func (x *DishObstructionStats) GetValidS() float32 {
	if x != nil {
		return x.ValidS
	}
	return 0
}

func (x *DishObstructionStats) GetWedgeFractionObstructed() []float32 {
	if x != nil {
		return x.WedgeFractionObstructed
	}
	return nil
}

func (x *DishObstructionStats) GetWedgeAbsFractionObstructed() []float32 {
	if x != nil {
		return x.WedgeAbsFractionObstructed
	}
	return nil
}

func (x *DishObstructionStats) GetAvgProlongedObstructionDurationS() float32 {
	if x != nil {
		return x.AvgProlongedObstructionDurationS
	}
	return 0
}

func (x *DishObstructionStats) GetAvgProlongedObstructionIntervalS() float32 {
	if x != nil {
		return x.AvgProlongedObstructionIntervalS
	}
	return 0
}

func (x *DishObstructionStats) GetAvgProlongedObstructionValid() bool {
	if x != nil {
		return x.AvgProlongedObstructionValid
	}
	return false
}

type DishAuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dish *ChallengeResponse `protobuf:"bytes,2,opt,name=dish,proto3" json:"dish,omitempty"`
}

func (x *DishAuthenticateResponse) Reset() {
	*x = DishAuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishAuthenticateResponse) ProtoMessage() {}

func (x *DishAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*DishAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{12}
}

func (x *DishAuthenticateResponse) GetDish() *ChallengeResponse {
	if x != nil {
		return x.Dish
	}
	return nil
}

type SelfTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detailed bool `protobuf:"varint,1,opt,name=detailed,proto3" json:"detailed,omitempty"`
}

func (x *SelfTestRequest) Reset() {
	*x = SelfTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTestRequest) ProtoMessage() {}

func (x *SelfTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTestRequest.ProtoReflect.Descriptor instead.
func (*SelfTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{13}
}

func (x *SelfTestRequest) GetDetailed() bool {
	if x != nil {
		return x.Detailed
	}
	return false
}

type SelfTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passed bool   `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	Report string `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *SelfTestResponse) Reset() {
	*x = SelfTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTestResponse) ProtoMessage() {}

func (x *SelfTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTestResponse.ProtoReflect.Descriptor instead.
func (*SelfTestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{14}
}

func (x *SelfTestResponse) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *SelfTestResponse) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

type StartDishSelfTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartDishSelfTestRequest) Reset() {
	*x = StartDishSelfTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDishSelfTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDishSelfTestRequest) ProtoMessage() {}

func (x *StartDishSelfTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDishSelfTestRequest.ProtoReflect.Descriptor instead.
func (*StartDishSelfTestRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{15}
}

type StartDishSelfTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartDishSelfTestResponse) Reset() {
	*x = StartDishSelfTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDishSelfTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDishSelfTestResponse) ProtoMessage() {}

func (x *StartDishSelfTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDishSelfTestResponse.ProtoReflect.Descriptor instead.
func (*StartDishSelfTestResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{16}
}

type SetTestModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RfMode                SetTestModeRequest_RfMode `protobuf:"varint,1,opt,name=rf_mode,json=rfMode,proto3,enum=SpaceX.API.Device.SetTestModeRequest_RfMode" json:"rf_mode,omitempty"`
	DisableLossOfCommFdir bool                      `protobuf:"varint,1001,opt,name=disable_loss_of_comm_fdir,json=disableLossOfCommFdir,proto3" json:"disable_loss_of_comm_fdir,omitempty"`
	EnableRulesOverride   bool                      `protobuf:"varint,1002,opt,name=enable_rules_override,json=enableRulesOverride,proto3" json:"enable_rules_override,omitempty"`
}

func (x *SetTestModeRequest) Reset() {
	*x = SetTestModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTestModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTestModeRequest) ProtoMessage() {}

func (x *SetTestModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTestModeRequest.ProtoReflect.Descriptor instead.
func (*SetTestModeRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{17}
}

func (x *SetTestModeRequest) GetRfMode() SetTestModeRequest_RfMode {
	if x != nil {
		return x.RfMode
	}
	return SetTestModeRequest_RX
}

func (x *SetTestModeRequest) GetDisableLossOfCommFdir() bool {
	if x != nil {
		return x.DisableLossOfCommFdir
	}
	return false
}

func (x *SetTestModeRequest) GetEnableRulesOverride() bool {
	if x != nil {
		return x.EnableRulesOverride
	}
	return false
}

type SetTestModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTestModeResponse) Reset() {
	*x = SetTestModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTestModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTestModeResponse) ProtoMessage() {}

func (x *SetTestModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTestModeResponse.ProtoReflect.Descriptor instead.
func (*SetTestModeResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{18}
}

type DishSetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishConfig *DishConfig `protobuf:"bytes,1,opt,name=dish_config,json=dishConfig,proto3" json:"dish_config,omitempty"`
}

func (x *DishSetConfigRequest) Reset() {
	*x = DishSetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishSetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetConfigRequest) ProtoMessage() {}

func (x *DishSetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetConfigRequest.ProtoReflect.Descriptor instead.
func (*DishSetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{19}
}

func (x *DishSetConfigRequest) GetDishConfig() *DishConfig {
	if x != nil {
		return x.DishConfig
	}
	return nil
}

type DishSetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedDishConfig *DishConfig `protobuf:"bytes,1,opt,name=updated_dish_config,json=updatedDishConfig,proto3" json:"updated_dish_config,omitempty"`
}

func (x *DishSetConfigResponse) Reset() {
	*x = DishSetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishSetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishSetConfigResponse) ProtoMessage() {}

func (x *DishSetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishSetConfigResponse.ProtoReflect.Descriptor instead.
func (*DishSetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{20}
}

func (x *DishSetConfigResponse) GetUpdatedDishConfig() *DishConfig {
	if x != nil {
		return x.UpdatedDishConfig
	}
	return nil
}

type DishGetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DishGetConfigRequest) Reset() {
	*x = DishGetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetConfigRequest) ProtoMessage() {}

func (x *DishGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetConfigRequest.ProtoReflect.Descriptor instead.
func (*DishGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{21}
}

type DishGetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishConfig *DishConfig `protobuf:"bytes,1,opt,name=dish_config,json=dishConfig,proto3" json:"dish_config,omitempty"`
}

func (x *DishGetConfigResponse) Reset() {
	*x = DishGetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_dish_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishGetConfigResponse) ProtoMessage() {}

func (x *DishGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_dish_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishGetConfigResponse.ProtoReflect.Descriptor instead.
func (*DishGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_dish_proto_rawDescGZIP(), []int{22}
}

func (x *DishGetConfigResponse) GetDishConfig() *DishConfig {
	if x != nil {
		return x.DishConfig
	}
	return nil
}

var File_spacex_api_device_dish_proto protoreflect.FileDescriptor

var file_spacex_api_device_dish_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x1e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x23, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x68, 0x53, 0x74,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x73,
	0x74, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x73, 0x74, 0x6f,
	0x77, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95,
	0x08, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x14,
	0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x6f, 0x62, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x6f, 0x62,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x12,
	0x2f, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6f, 0x62,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6f, 0x70,
	0x5f, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6f, 0x70, 0x52, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6f, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x65, 0x61, 0x6d, 0x12,
	0x2d, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x64, 0x65, 0x62, 0x75, 0x67, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1b, 0x70, 0x6f, 0x70, 0x5f, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x31, 0x35, 0x73,
	0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x70, 0x6f, 0x70,
	0x50, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x31, 0x35, 0x73, 0x4d,
	0x65, 0x61, 0x6e, 0x12, 0x3d, 0x0a, 0x1c, 0x70, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x5f, 0x31, 0x35, 0x73, 0x5f, 0x6d,
	0x65, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x70, 0x6f, 0x70, 0x50, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x73, 0x31, 0x35, 0x73, 0x4d, 0x65,
	0x61, 0x6e, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x73, 0x4f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x32, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x32, 0x73, 0x4f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x35, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x35, 0x73, 0x4f, 0x75, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x35, 0x73, 0x5f, 0x6f, 0x75, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x35, 0x73, 0x4f, 0x75,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f,
	0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x36, 0x30, 0x73, 0x5f, 0x6f,
	0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x36, 0x30, 0x73,
	0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x68, 0x4f,
	0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50,
	0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x4f, 0x75, 0x74,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x64, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x64, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x90,
	0x01, 0x0a, 0x05, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x48, 0x45, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f,
	0x57, 0x4e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44,
	0x55, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x53, 0x41, 0x54, 0x53,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x42, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x49, 0x4e,
	0x4b, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x53, 0x10,
	0x08, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f, 0x70, 0x5f, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0xe9, 0x07, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x6f, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x6f, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0xea, 0x07, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x10, 0x70, 0x6f, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x4d, 0x73, 0x12, 0x37, 0x0a, 0x17, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x5f, 0x62, 0x70, 0x73, 0x18,
	0xeb, 0x07, 0x20, 0x03, 0x28, 0x02, 0x52, 0x15, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x42, 0x70, 0x73, 0x12, 0x33, 0x0a,
	0x15, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x5f, 0x62, 0x70, 0x73, 0x18, 0xec, 0x07, 0x20, 0x03, 0x28, 0x02, 0x52, 0x13, 0x75,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x42,
	0x70, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0xf1, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50,
	0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x4f, 0x75, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x73, 0x4a, 0x06, 0x08, 0xed,
	0x07, 0x10, 0xee, 0x07, 0x4a, 0x06, 0x08, 0xee, 0x07, 0x10, 0xef, 0x07, 0x4a, 0x06, 0x08, 0xef,
	0x07, 0x10, 0xf0, 0x07, 0x4a, 0x06, 0x08, 0xf0, 0x07, 0x10, 0xf1, 0x07, 0x22, 0x86, 0x07, 0x0a,
	0x15, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x69, 0x73, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x12, 0x36, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0xf6, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x67, 0x70, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0xf7, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x47, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08,
	0x67, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x6e,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x1a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x6f, 0x70, 0x50,
	0x69, 0x6e, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x5f, 0x62, 0x70, 0x73, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75,
	0x74, 0x42, 0x70, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x5f, 0x62, 0x70, 0x73, 0x18, 0xf0, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x42, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6f, 0x70,
	0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73,
	0x18, 0xf1, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x6f, 0x70, 0x50, 0x69, 0x6e, 0x67,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x6f, 0x62, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0xec,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x4f, 0x62,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x10,
	0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x62, 0x6f, 0x72, 0x65,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x65,
	0x67, 0x18, 0xf3, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x62, 0x6f, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x44, 0x65, 0x67, 0x12, 0x37, 0x0a,
	0x17, 0x62, 0x6f, 0x72, 0x65, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x15, 0x62, 0x6f, 0x72, 0x65, 0x73, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x74, 0x68, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x5f, 0x6d, 0x62, 0x70, 0x73, 0x18, 0xf8, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x65, 0x74, 0x68, 0x53, 0x70, 0x65, 0x65, 0x64, 0x4d, 0x62, 0x70, 0x73, 0x4a, 0x06, 0x08,
	0xe9, 0x07, 0x10, 0xea, 0x07, 0x4a, 0x06, 0x08, 0xee, 0x07, 0x10, 0xef, 0x07, 0x4a, 0x06, 0x08,
	0xf5, 0x07, 0x10, 0xf6, 0x07, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x6e, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x22, 0xb7,
	0x02, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x75, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x75, 0x63, 0x6b,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x72,
	0x6d, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x68, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x4e,
	0x65, 0x61, 0x72, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x13, 0x75,
	0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14,
	0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x6c, 0x6f, 0x77,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x46, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x68,
	0x47, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x70, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67, 0x70, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x73, 0x5f, 0x73, 0x61, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x70, 0x73, 0x53, 0x61, 0x74, 0x73,
	0x22, 0x81, 0x04, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x68, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x66, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x12, 0x3a, 0x0a, 0x19, 0x77, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x17, 0x77, 0x65, 0x64, 0x67, 0x65,
	0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x77, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x5f,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x1a, 0x77, 0x65, 0x64, 0x67, 0x65,
	0x41, 0x62, 0x73, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x24, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x20, 0x61, 0x76, 0x67, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x65,
	0x64, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x12, 0x4e, 0x0a, 0x24, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x20, 0x61, 0x76, 0x67, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x65,
	0x64, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x53, 0x12, 0x45, 0x0a, 0x1f, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x61, 0x76, 0x67, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4a, 0x06, 0x08, 0xee,
	0x07, 0x10, 0xef, 0x07, 0x22, 0x54, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x69, 0x73, 0x68, 0x22, 0x2d, 0x0a, 0x0f, 0x53, 0x65,
	0x6c, 0x66, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x53, 0x65, 0x6c,
	0x66, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x68, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x69, 0x73, 0x68, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x07, 0x72, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x66,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x5f, 0x66, 0x64, 0x69,
	0x72, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x4c, 0x6f, 0x73, 0x73, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x46, 0x64, 0x69, 0x72, 0x12,
	0x33, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x06, 0x52, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x06,
	0x0a, 0x02, 0x52, 0x58, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x54, 0x58, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x4c, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x06, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0xa4, 0x03, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x56, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x68, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x66, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x68, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2a, 0x43, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x41,
	0x52, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x42, 0x17, 0x5a, 0x15, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spacex_api_device_dish_proto_rawDescOnce sync.Once
	file_spacex_api_device_dish_proto_rawDescData = file_spacex_api_device_dish_proto_rawDesc
)

func file_spacex_api_device_dish_proto_rawDescGZIP() []byte {
	file_spacex_api_device_dish_proto_rawDescOnce.Do(func() {
		file_spacex_api_device_dish_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacex_api_device_dish_proto_rawDescData)
	})
	return file_spacex_api_device_dish_proto_rawDescData
}

var file_spacex_api_device_dish_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spacex_api_device_dish_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_spacex_api_device_dish_proto_goTypes = []interface{}{
	(DishState)(0),                        // 0: SpaceX.API.Device.DishState
	(DishOutage_Cause)(0),                 // 1: SpaceX.API.Device.DishOutage.Cause
	(SetTestModeRequest_RfMode)(0),        // 2: SpaceX.API.Device.SetTestModeRequest.RfMode
	(*DishStowRequest)(nil),               // 3: SpaceX.API.Device.DishStowRequest
	(*DishStowResponse)(nil),              // 4: SpaceX.API.Device.DishStowResponse
	(*DishGetContextRequest)(nil),         // 5: SpaceX.API.Device.DishGetContextRequest
	(*DishGetContextResponse)(nil),        // 6: SpaceX.API.Device.DishGetContextResponse
	(*DishOutage)(nil),                    // 7: SpaceX.API.Device.DishOutage
	(*DishGetHistoryResponse)(nil),        // 8: SpaceX.API.Device.DishGetHistoryResponse
	(*DishGetStatusResponse)(nil),         // 9: SpaceX.API.Device.DishGetStatusResponse
	(*DishGetObstructionMapRequest)(nil),  // 10: SpaceX.API.Device.DishGetObstructionMapRequest
	(*DishGetObstructionMapResponse)(nil), // 11: SpaceX.API.Device.DishGetObstructionMapResponse
	(*DishAlerts)(nil),                    // 12: SpaceX.API.Device.DishAlerts
	(*DishGpsStats)(nil),                  // 13: SpaceX.API.Device.DishGpsStats
	(*DishObstructionStats)(nil),          // 14: SpaceX.API.Device.DishObstructionStats
	(*DishAuthenticateResponse)(nil),      // 15: SpaceX.API.Device.DishAuthenticateResponse
	(*SelfTestRequest)(nil),               // 16: SpaceX.API.Device.SelfTestRequest
	(*SelfTestResponse)(nil),              // 17: SpaceX.API.Device.SelfTestResponse
	(*StartDishSelfTestRequest)(nil),      // 18: SpaceX.API.Device.StartDishSelfTestRequest
	(*StartDishSelfTestResponse)(nil),     // 19: SpaceX.API.Device.StartDishSelfTestResponse
	(*SetTestModeRequest)(nil),            // 20: SpaceX.API.Device.SetTestModeRequest
	(*SetTestModeResponse)(nil),           // 21: SpaceX.API.Device.SetTestModeResponse
	(*DishSetConfigRequest)(nil),          // 22: SpaceX.API.Device.DishSetConfigRequest
	(*DishSetConfigResponse)(nil),         // 23: SpaceX.API.Device.DishSetConfigResponse
	(*DishGetConfigRequest)(nil),          // 24: SpaceX.API.Device.DishGetConfigRequest
	(*DishGetConfigResponse)(nil),         // 25: SpaceX.API.Device.DishGetConfigResponse
	(*DeviceInfo)(nil),                    // 26: SpaceX.API.Device.DeviceInfo
	(*DeviceState)(nil),                   // 27: SpaceX.API.Device.DeviceState
	(*ChallengeResponse)(nil),             // 28: SpaceX.API.Device.ChallengeResponse
	(*DishConfig)(nil),                    // 29: SpaceX.API.Device.DishConfig
}
var file_spacex_api_device_dish_proto_depIdxs = []int32{
	26, // 0: SpaceX.API.Device.DishGetContextResponse.device_info:type_name -> SpaceX.API.Device.DeviceInfo
	27, // 1: SpaceX.API.Device.DishGetContextResponse.device_state:type_name -> SpaceX.API.Device.DeviceState
	1,  // 2: SpaceX.API.Device.DishOutage.cause:type_name -> SpaceX.API.Device.DishOutage.Cause
	7,  // 3: SpaceX.API.Device.DishGetHistoryResponse.outages:type_name -> SpaceX.API.Device.DishOutage
	26, // 4: SpaceX.API.Device.DishGetStatusResponse.device_info:type_name -> SpaceX.API.Device.DeviceInfo
	27, // 5: SpaceX.API.Device.DishGetStatusResponse.device_state:type_name -> SpaceX.API.Device.DeviceState
	12, // 6: SpaceX.API.Device.DishGetStatusResponse.alerts:type_name -> SpaceX.API.Device.DishAlerts
	7,  // 7: SpaceX.API.Device.DishGetStatusResponse.outage:type_name -> SpaceX.API.Device.DishOutage
	13, // 8: SpaceX.API.Device.DishGetStatusResponse.gps_stats:type_name -> SpaceX.API.Device.DishGpsStats
	14, // 9: SpaceX.API.Device.DishGetStatusResponse.obstruction_stats:type_name -> SpaceX.API.Device.DishObstructionStats
	28, // 10: SpaceX.API.Device.DishAuthenticateResponse.dish:type_name -> SpaceX.API.Device.ChallengeResponse
	2,  // 11: SpaceX.API.Device.SetTestModeRequest.rf_mode:type_name -> SpaceX.API.Device.SetTestModeRequest.RfMode
	29, // 12: SpaceX.API.Device.DishSetConfigRequest.dish_config:type_name -> SpaceX.API.Device.DishConfig
	29, // 13: SpaceX.API.Device.DishSetConfigResponse.updated_dish_config:type_name -> SpaceX.API.Device.DishConfig
	29, // 14: SpaceX.API.Device.DishGetConfigResponse.dish_config:type_name -> SpaceX.API.Device.DishConfig
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_spacex_api_device_dish_proto_init() }
func file_spacex_api_device_dish_proto_init() {
	if File_spacex_api_device_dish_proto != nil {
		return
	}
	file_spacex_api_device_common_proto_init()
	file_spacex_api_device_dish_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spacex_api_device_dish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishStowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishStowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishOutage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetObstructionMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetObstructionMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishAlerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGpsStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishObstructionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishAuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDishSelfTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDishSelfTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTestModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTestModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishSetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishSetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_dish_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishGetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacex_api_device_dish_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacex_api_device_dish_proto_goTypes,
		DependencyIndexes: file_spacex_api_device_dish_proto_depIdxs,
		EnumInfos:         file_spacex_api_device_dish_proto_enumTypes,
		MessageInfos:      file_spacex_api_device_dish_proto_msgTypes,
	}.Build()
	File_spacex_api_device_dish_proto = out.File
	file_spacex_api_device_dish_proto_rawDesc = nil
	file_spacex_api_device_dish_proto_goTypes = nil
	file_spacex_api_device_dish_proto_depIdxs = nil
}
